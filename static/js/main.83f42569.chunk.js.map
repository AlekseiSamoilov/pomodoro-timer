{"version":3,"sources":["components/settings/settings.module.css","components/timer/timer.module.css","components/settings-button/settings-button.module.css","components/back-button/back-button.module.css","components/progress/style.module.css","components/app/app.module.css","components/play-button/play-button.module.css","components/pause-button/pause-button.module.css","components/play-button/play-button.tsx","components/pause-button/pause-button.tsx","components/settings-button/settings-button.tsx","components/settings-context/SettingsContext.tsx","components/progress/progress.tsx","components/timer/timer.tsx","components/back-button/BackButton.tsx","components/settings/settings.tsx","components/app/App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","settings_container","slider","slider_green","thumb","thumb_green","label_text","back_button_container","timer_container","button_container","settings_button_container","settings_button","icon","text","back_button","cells","cell","main","play_button","pulse","pause_button","PlayButton","_ref","onClick","className","React","createElement","concat","style","xmlns","fill","viewBox","stroke-width","stroke","stroke-linecap","stroke-linejoin","d","PauseButton","SettingsButton","props","Object","assign","SettingsContext","createContext","workMinutes","breakMinutes","setWorkMinutes","setBreakMinutes","showSettings","setShowSettings","Progress","memo","sessions","getColor","index","length","Array","from","_","i","key","backgroundColor","Timer","useContext","isPaused","setIsPaused","useState","secondsLeft","setSecondsLeft","mode","setMode","pomodoroSessions","setPomodoroSessions","startTimeRef","useRef","audioRef","Audio","secondsLeftRef","isPausedRef","modeRef","tick","current","elapsed","Date","getTime","newSecondsLeft","Math","floor","play","nextMode","nextSeconds","handlePomodoroComplete","switchMode","setTimeout","useEffect","interval","setInterval","clearInterval","type","prev","initialSeconds","initTimer","totalSeconds","percantage","round","minutes","seconds","secondsFormatted","CircularProgressbar","value","styles","buildStyles","textColor","pathColor","trailColor","BackButton","fillRule","clipRule","Settings","ReactSlider","thumbClassName","trackClassName","track","min","max","onChange","newValue","App","Provider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.83f42569.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"settings_settings_container__Qe-Sa\",\"slider\":\"settings_slider__1alb2\",\"slider_green\":\"settings_slider_green__1TvLw\",\"thumb\":\"settings_thumb__2rH5f\",\"thumb_green\":\"settings_thumb_green__1u70X\",\"label_text\":\"settings_label_text__mKARp\",\"back_button_container\":\"settings_back_button_container__5vI7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer_container\":\"timer_timer_container__V9v2g\",\"button_container\":\"timer_button_container__Wb7RO\",\"settings_button_container\":\"timer_settings_button_container__1BFA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_button\":\"settings-button_settings_button__3y5a5\",\"icon\":\"settings-button_icon__FC8AJ\",\"text\":\"settings-button_text__3yd2D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back_button\":\"back-button_back_button__2BDj6\",\"icon\":\"back-button_icon__3SKiG\",\"text\":\"back-button_text__v8uv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cells\":\"style_cells__2e3lp\",\"cell\":\"style_cell__29Ipw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__3yfFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play_button\":\"play-button_play_button__2lL0Q\",\"pulse\":\"play-button_pulse__qAuxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pause_button\":\"pause-button_pause_button__1m1Cl\",\"pulse\":\"pause-button_pulse__1mZHC\"};","import React from \"react\";\nimport style from \"./play-button.module.css\";\n\ninterface IPlayButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst PlayButton: React.FC<IPlayButtonProps> = ({ onClick, className }) => {\n  return (\n    <button className={`${style.play_button} ${className}`} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React from \"react\";\nimport style from \"./pause-button.module.css\";\n\ninterface IPauseButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst PauseButton: React.FC<IPauseButtonProps> = ({ onClick, className }) => {\n  return (\n    <button className={`${style.pause_button} ${className}`} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M15.75 5.25v13.5m-7.5-13.5v13.5\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default PauseButton;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport style from \"./settings-button.module.css\";\n\ntype TSettingsButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst SettingsButton: React.FC<TSettingsButtonProps> = (props) => {\n  return (\n    <button className={style.settings_button} {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className={style.icon}\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M4.5 12a7.5 7.5 0 0 0 15 0m-15 0a7.5 7.5 0 1 1 15 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077 1.41-.513m14.095-5.13 1.41-.513M5.106 17.785l1.15-.964m11.49-9.642 1.149-.964M7.501 19.795l.75-1.3m7.5-12.99.75-1.3m-6.063 16.658.26-1.477m2.605-14.772.26-1.477m0 17.726-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205 12 12m6.894 5.785-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495\"\n        />\n      </svg>\n      <p className={style.text}>Settings</p>\n    </button>\n  );\n};\nexport default SettingsButton;\n","import React from \"react\";\n\ninterface ISettingsContext {\n  workMinutes: number;\n  breakMinutes: number;\n  setWorkMinutes: (minutes: number) => void;\n  setBreakMinutes: (minutes: number) => void;\n  showSettings: boolean;\n  setShowSettings: (show: boolean) => void;\n}\n\nconst SettingsContext = React.createContext<ISettingsContext>({\n  workMinutes: 45,\n  breakMinutes: 5,\n  setWorkMinutes: () => {},\n  setBreakMinutes: () => {},\n  showSettings: false,\n  setShowSettings: () => {},\n});\n\nexport default SettingsContext;\n","import { useState } from \"react\";\nimport style from \"./style.module.css\";\nimport React from \"react\";\n// #ed4141 red\n// #40c463 green\ninterface IProgress {\n  sessions: Array<\"work\" | \"break\">;\n}\n\nconst Progress: React.FC<IProgress> = React.memo(({ sessions }) => {\n  const totalCells = 36;\n  const getColor = (index: number) => {\n    if (index < sessions.length) {\n      return sessions[index] === \"work\" ? \"#ed4141\" : \"#40c463\";\n    }\n    return \"rgba(255,255,255,.2)\";\n  };\n\n  const cells = Array.from({ length: totalCells }, (_, i) => (\n    <div\n      className={style.cell}\n      key={i}\n      style={{ backgroundColor: getColor(i) }}\n    />\n  ));\n  return <div className={style.cells}>{cells}</div>;\n});\n\nexport default Progress;\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport PlayButton from \"../play-button/play-button\";\nimport style from \"./timer.module.css\";\nimport PauseButton from \"../pause-button/pause-button\";\nimport SettingsButton from \"../settings-button/settings-button\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport Progress from \"../progress/progress\";\n\nfunction Timer() {\n  const { showSettings, setShowSettings, workMinutes, breakMinutes } =\n    useContext(SettingsContext);\n  const [isPaused, setIsPaused] = useState<boolean>(true);\n  const [secondsLeft, setSecondsLeft] = useState<number>(0);\n  const [mode, setMode] = useState<\"work\" | \"break\" | \"pause\">(\"work\");\n  const [pomodoroSessions, setPomodoroSessions] = useState<\n    (\"work\" | \"break\")[]\n  >([]);\n\n  const startTimeRef = useRef<Date | null>(null);\n\n  const audioRef = useRef(new Audio(\"/alarm.mp3\"));\n\n  const secondsLeftRef = useRef(secondsLeft);\n  const isPausedRef = useRef(isPaused);\n  const modeRef = useRef(mode);\n\n  function tick() {\n    if (startTimeRef.current) {\n      const now = new Date().getTime();\n      const elapsed = (now - startTimeRef.current.getTime()) / 1000;\n      const currentTotalSeconds =\n        modeRef.current === \"work\" ? workMinutes * 60 : breakMinutes * 60;\n      const newSecondsLeft = currentTotalSeconds - Math.floor(elapsed);\n\n      if (newSecondsLeft <= 0) {\n        audioRef.current.play();\n        switchMode();\n      } else {\n        setSecondsLeft(newSecondsLeft);\n        setTimeout(tick, 1000 - (elapsed % 1) * 1000);\n      }\n    }\n  }\n\n  function startTimer() {\n    if (!startTimeRef.current) {\n      startTimeRef.current = new Date(\n        new Date().getTime() - (totalSeconds - secondsLeft) * 1000\n      );\n    }\n    setIsPaused(false);\n    isPausedRef.current = false;\n    setTimeout(tick, 1000);\n  }\n\n  function pauseTimer() {\n    setIsPaused(true);\n    isPausedRef.current = true;\n    startTimeRef.current = null;\n  }\n\n  useEffect(() => {\n    if (!isPaused) {\n      const interval = setInterval(tick, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPaused]);\n\n  useEffect(() => {\n    if (secondsLeft === 0 && !isPaused) {\n      audioRef.current.play();\n    }\n  }, [secondsLeft, isPaused]);\n\n  const handlePomodoroComplete = (type: string) => {\n    setPomodoroSessions((prev: any) => [...prev, type]);\n  };\n\n  function switchMode() {\n    const nextMode = modeRef.current === \"work\" ? \"break\" : \"work\";\n    setMode(nextMode);\n    modeRef.current = nextMode;\n\n    const nextSeconds = (nextMode === \"work\" ? workMinutes : breakMinutes) * 60;\n    setSecondsLeft(nextSeconds);\n    secondsLeftRef.current = nextSeconds;\n    startTimeRef.current = new Date();\n\n    if (nextMode === \"break\") {\n      handlePomodoroComplete(\"work\");\n    } else {\n      handlePomodoroComplete(\"break\");\n    }\n  }\n\n  function initTimer() {\n    const initialSeconds = (mode === \"work\" ? workMinutes : breakMinutes) * 60;\n    setSecondsLeft(initialSeconds);\n    secondsLeftRef.current = initialSeconds;\n    startTimeRef.current = new Date();\n  }\n\n  useEffect(() => {\n    initTimer();\n  }, [showSettings, workMinutes, breakMinutes, mode]);\n\n  // useEffect(() => {\n  //   initTimer();\n  //   startTimeRef.current = new Date();\n  // }, [showSettings, workMinutes, breakMinutes]);\n\n  const totalSeconds = mode === \"work\" ? workMinutes * 60 : breakMinutes * 60;\n  const percantage = Math.round((secondsLeft / totalSeconds) * 100);\n  const minutes = Math.floor(secondsLeft / 60);\n  let seconds = secondsLeft % 60;\n  let secondsFormatted = seconds < 10 ? `0${seconds}` : seconds;\n\n  return (\n    <div className={style.timer_container}>\n      <CircularProgressbar\n        value={percantage}\n        text={`${minutes}:${secondsFormatted}`}\n        styles={buildStyles({\n          textColor: \"#fff\",\n          pathColor: mode === \"work\" ? \"#ed4141\" : \"#40c463\",\n          trailColor: \"rgba(255,255,255,.2)\",\n          backgroundColor: \"#40c463\",\n        })}\n      />\n      <div className={style.button_container}>\n        {isPaused ? (\n          <PlayButton onClick={startTimer} />\n        ) : (\n          <PauseButton onClick={pauseTimer} />\n        )}\n      </div>\n      <Progress sessions={pomodoroSessions} />\n      <div className={style.settings_button_container}>\n        <SettingsButton onClick={() => setShowSettings(true)} />\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","import style from \"./back-button.module.css\";\nimport React, { ButtonHTMLAttributes } from \"react\";\n\ntype TBackButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst BackButton: React.FC<TBackButtonProps> = (props) => {\n  return (\n    <button className={style.back_button} {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        className={style.icon}\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.793 2.232a.75.75 0 0 1-.025 1.06L3.622 7.25h10.003a5.375 5.375 0 0 1 0 10.75H10.75a.75.75 0 0 1 0-1.5h2.875a3.875 3.875 0 0 0 0-7.75H3.622l4.146 3.957a.75.75 0 0 1-1.036 1.085l-5.5-5.25a.75.75 0 0 1 0-1.085l5.5-5.25a.75.75 0 0 1 1.06.025Z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n      <p className={style.text}>back</p>\n    </button>\n  );\n};\n\nexport default BackButton;\n","import React, { useContext } from \"react\";\nimport style from \"./settings.module.css\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport BackButton from \"../back-button/BackButton\";\n\nconst Settings = () => {\n  const {\n    workMinutes,\n    breakMinutes,\n    setWorkMinutes,\n    setBreakMinutes,\n    showSettings,\n    setShowSettings,\n  } = useContext(SettingsContext);\n  if (!showSettings) {\n    return null;\n  }\n  return (\n    <div className={style.settings_container}>\n      <label className={style.label_text}>work: {workMinutes} min</label>\n      <ReactSlider\n        className={style.slider}\n        value={workMinutes}\n        thumbClassName={style.thumb}\n        trackClassName={style.track}\n        min={1}\n        max={60}\n        onChange={(newValue) => setWorkMinutes(newValue)}\n      />\n      <label className={style.label_text}>break: {breakMinutes} min</label>\n      <ReactSlider\n        className={style.slider_green}\n        value={breakMinutes}\n        thumbClassName={`${style.thumb} ${style.thumb_green}`}\n        trackClassName={style.track}\n        onChange={(newValue) => setBreakMinutes(newValue)}\n        min={1}\n        max={30}\n      />\n      <div className={style.back_button_container}>\n        <BackButton onClick={() => setShowSettings(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport style from \"./app.module.css\";\nimport Timer from \"../timer/timer\";\nimport Settings from \"../settings/settings\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport Progress from \"../progress/progress\";\n\nconst App = () => {\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n  const [workMinutes, setWorkMinutes] = useState<number>(20);\n  const [breakMinutes, setBreakMinutes] = useState<number>(5);\n\n  return (\n    <main className={style.main}>\n      <SettingsContext.Provider\n        value={{\n          workMinutes,\n          breakMinutes,\n          setWorkMinutes,\n          setBreakMinutes,\n          showSettings,\n          setShowSettings,\n        }}\n      >\n        {showSettings ? <Settings /> : <Timer />}\n      </SettingsContext.Provider>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}