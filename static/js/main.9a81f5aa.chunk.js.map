{"version":3,"sources":["components/settings/settings.module.css","components/request-notofication-button/RequestNotificationButton.module.css","components/timer/timer.module.css","components/settings-button/settings-button.module.css","components/back-button/back-button.module.css","components/progress/style.module.css","components/app/app.module.css","components/play-button/play-button.module.css","components/pause-button/pause-button.module.css","components/play-button/play-button.tsx","components/pause-button/pause-button.tsx","components/settings-button/settings-button.tsx","components/settings-context/SettingsContext.tsx","components/progress/progress.tsx","components/timer/timer.tsx","components/back-button/BackButton.tsx","components/request-notofication-button/RequestNotificationButton.tsx","components/settings/settings.tsx","components/app/App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","settings_container","slider","slider_green","thumb","thumb_green","label_text","back_button_container","button","button_default","button_enabled","button_denied","timer_container","button_container","settings_button_container","settings_button","icon","text","back_button","cells","cell","main","play_button","pulse","pause_button","PlayButton","_ref","onClick","className","React","createElement","concat","style","xmlns","fill","viewBox","stroke-width","stroke","stroke-linecap","stroke-linejoin","d","PauseButton","SettingsButton","props","Object","assign","SettingsContext","createContext","workMinutes","breakMinutes","setWorkMinutes","setBreakMinutes","showSettings","setShowSettings","Progress","memo","sessions","getColor","index","length","Array","from","_","i","key","backgroundColor","Timer","useContext","isPaused","setIsPaused","useState","secondsLeft","setSecondsLeft","mode","setMode","pomodoroSessions","setPomodoroSessions","savedSessions","localStorage","getItem","parsedSession","JSON","parse","someDate","today","Date","getDate","getMonth","getFullYear","isToday","date","startTimeRef","useRef","remainingTimeRef","audioRef","Audio","process","isPausedRef","modeRef","savePomodoroSessions","useCallback","sessionsData","setItem","stringify","updateServiceWorker","duration","navigator","serviceWorker","controller","endTime","now","postMessage","type","initTimer","initialSeconds","current","switchMode","currentMode","prev","nextMode","sendNotification","window","Notification","permission","body","tick","currentTime","elapsedTime","Math","floor","newRemainingTime","max","play","useEffect","interval","setInterval","clearInterval","checkDate","getHours","getMinutes","totalSeconds","percentage","round","minutes","seconds","secondsFormatted","CircularProgressbar","value","styles","buildStyles","textColor","pathColor","trailColor","BackButton","fillRule","clipRule","RequestNotificationButton","notificationStatus","setNotificationStatus","async","requestPermission","getButtonClass","disabled","getButtonText","Settings","ReactSlider","thumbClassName","trackClassName","track","min","onChange","newValue","App","Provider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","addEventListener","register","registration","console","log","scope","catch","error"],"mappings":"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","file":"static/js/main.9a81f5aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"settings_settings_container__Qe-Sa\",\"slider\":\"settings_slider__1alb2\",\"slider_green\":\"settings_slider_green__1TvLw\",\"thumb\":\"settings_thumb__2rH5f\",\"thumb_green\":\"settings_thumb_green__1u70X\",\"label_text\":\"settings_label_text__mKARp\",\"back_button_container\":\"settings_back_button_container__5vI7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RequestNotificationButton_button__2CdGW\",\"button_default\":\"RequestNotificationButton_button_default__2GevG\",\"button_enabled\":\"RequestNotificationButton_button_enabled__1hcv5\",\"button_denied\":\"RequestNotificationButton_button_denied__20Xgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer_container\":\"timer_timer_container__V9v2g\",\"button_container\":\"timer_button_container__Wb7RO\",\"settings_button_container\":\"timer_settings_button_container__1BFA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_button\":\"settings-button_settings_button__3y5a5\",\"icon\":\"settings-button_icon__FC8AJ\",\"text\":\"settings-button_text__3yd2D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back_button\":\"back-button_back_button__2BDj6\",\"icon\":\"back-button_icon__3SKiG\",\"text\":\"back-button_text__v8uv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cells\":\"style_cells__2e3lp\",\"cell\":\"style_cell__29Ipw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__3yfFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play_button\":\"play-button_play_button__2lL0Q\",\"pulse\":\"play-button_pulse__qAuxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pause_button\":\"pause-button_pause_button__1m1Cl\",\"pulse\":\"pause-button_pulse__1mZHC\"};","import React from \"react\";\nimport style from \"./play-button.module.css\";\n\ninterface IPlayButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst PlayButton: React.FC<IPlayButtonProps> = ({ onClick, className }) => {\n  return (\n    <button className={`${style.play_button} ${className}`} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React from \"react\";\nimport style from \"./pause-button.module.css\";\n\ninterface IPauseButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst PauseButton: React.FC<IPauseButtonProps> = ({ onClick, className }) => {\n  return (\n    <button className={`${style.pause_button} ${className}`} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M15.75 5.25v13.5m-7.5-13.5v13.5\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default PauseButton;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport style from \"./settings-button.module.css\";\n\ntype TSettingsButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst SettingsButton: React.FC<TSettingsButtonProps> = (props) => {\n  return (\n    <button className={style.settings_button} {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className={style.icon}\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M4.5 12a7.5 7.5 0 0 0 15 0m-15 0a7.5 7.5 0 1 1 15 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077 1.41-.513m14.095-5.13 1.41-.513M5.106 17.785l1.15-.964m11.49-9.642 1.149-.964M7.501 19.795l.75-1.3m7.5-12.99.75-1.3m-6.063 16.658.26-1.477m2.605-14.772.26-1.477m0 17.726-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205 12 12m6.894 5.785-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495\"\n        />\n      </svg>\n      <p className={style.text}>Settings</p>\n    </button>\n  );\n};\nexport default SettingsButton;\n","import React from \"react\";\n\ninterface ISettingsContext {\n  workMinutes: number;\n  breakMinutes: number;\n  setWorkMinutes: (minutes: number) => void;\n  setBreakMinutes: (minutes: number) => void;\n  showSettings: boolean;\n  setShowSettings: (show: boolean) => void;\n}\n\nconst SettingsContext = React.createContext<ISettingsContext>({\n  workMinutes: 45,\n  breakMinutes: 5,\n  setWorkMinutes: () => {},\n  setBreakMinutes: () => {},\n  showSettings: false,\n  setShowSettings: () => {},\n});\n\nexport default SettingsContext;\n","\nimport style from \"./style.module.css\";\nimport React from \"react\";\n\ninterface IProgress {\n  sessions: Array<\"work\" | \"break\">;\n}\n\nconst Progress: React.FC<IProgress> = React.memo(({ sessions }) => {\n  const totalCells = 48;\n  const getColor = (index: number) => {\n    if (index < sessions.length) {\n      return sessions[index] === \"work\" ? \"#ed4141\" : \"#40c463\";\n    }\n    return \"rgba(255,255,255,.2)\";\n  };\n\n  const cells = Array.from({ length: totalCells }, (_, i) => (\n    <div\n      className={style.cell}\n      key={i}\n      style={{ backgroundColor: getColor(i) }}\n    />\n  ));\n  return <div className={style.cells}>{cells}</div>;\n});\n\nexport default Progress;\n","import React, { useContext, useState, useEffect, useRef, useCallback } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport PlayButton from \"../play-button/play-button\";\nimport style from \"./timer.module.css\";\nimport PauseButton from \"../pause-button/pause-button\";\nimport SettingsButton from \"../settings-button/settings-button\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport Progress from \"../progress/progress\";\nimport { start } from \"repl\";\n\nfunction Timer() {\n  const { showSettings, setShowSettings, workMinutes, breakMinutes } = useContext(SettingsContext);\n  const [isPaused, setIsPaused] = useState<boolean>(true);\n  const [secondsLeft, setSecondsLeft] = useState<number>(0);\n  const [mode, setMode] = useState<\"work\" | \"break\">(\"work\");\n\n  const isToday = (someDate: Date): boolean => {\n    const today = new Date()\n    return someDate.getDate() === today.getDate() && \n      someDate.getMonth() === today.getMonth() &&\n      someDate.getFullYear() === today.getFullYear()\n  }\n\n  const [pomodoroSessions, setPomodoroSessions] = useState<(\"work\" | \"break\")[]>(() => {\n    const savedSessions = localStorage.getItem('pomodoroSessions');\n    if (savedSessions) {\n      const parsedSession = JSON.parse(savedSessions);\n      if (isToday(new Date(parsedSession.date))) {\n        return parsedSession.sessions;\n      }\n    }\n    return [];\n  });\n  const startTimeRef = useRef<number | null>(null)\n  const remainingTimeRef = useRef<number>(0);\n  const audioRef = useRef(new Audio(process.env.PUBLIC_URL + \"/alarm.mp3\"));\n  const secondsLeftRef = useRef(secondsLeft);\n  const isPausedRef = useRef(isPaused);\n  const modeRef = useRef(mode);\n\n  const savePomodoroSessions = useCallback(() => {\n    const sessionsData = {\n      date: new Date(),\n      sessions: pomodoroSessions\n    };\n    localStorage.setItem('pomodoroSessions', JSON.stringify(sessionsData));\n  }, [pomodoroSessions])\n\n  const updateServiceWorker = useCallback((duration: number, mode: 'work' | 'break') => {\n    if (navigator.serviceWorker.controller) {\n      const endTime = Date.now() + duration * 1000;\n      navigator.serviceWorker.controller.postMessage({\n        type: 'SET_TIMER',\n        endTime: endTime,\n        mode: mode\n      });\n    }\n  }, []);\n\n\n  const initTimer = useCallback(() => {\n    const initialSeconds = (modeRef.current === 'work' ? workMinutes : breakMinutes) * 60;\n    remainingTimeRef.current = initialSeconds;\n    setSecondsLeft(initialSeconds);\n    setIsPaused(true);\n    isPausedRef.current = true;\n    startTimeRef.current = null;\n  }, [workMinutes, breakMinutes]);\n\n  const switchMode = useCallback(() => {\n    const currentMode = modeRef.current;\n    setPomodoroSessions(prev => [...prev, currentMode]);\n    const nextMode = currentMode === 'work' ? 'break' : 'work';\n    setMode(nextMode);\n    modeRef.current = nextMode;\n    initTimer();\n  }, [initTimer]);\n\n  const sendNotification = useCallback(() => {\n    if (\"Notification\" in window && Notification.permission === \"granted\") {\n      new Notification(modeRef.current === 'work' ? 'Work Session Ended' : 'Break Time Over', {\n        body: modeRef.current === 'work' ? \"Time's up! Take a break. ⏰\" : \"Break's over! Time to focus. 💻\",\n        icon: \"/tomato.png\"\n      });\n    }\n  }, []);\n\n  const tick = useCallback(() => {\n    if (isPausedRef.current) return;\n    \n    if (startTimeRef.current === null) {\n      startTimeRef.current = Date.now();\n    }\n    \n    const currentTime = Date.now();\n    const elapsedTime = Math.floor((currentTime - startTimeRef.current) / 1000);\n    const newRemainingTime = Math.max(remainingTimeRef.current - elapsedTime, 0);\n    \n    setSecondsLeft(newRemainingTime);\n\n    if (newRemainingTime === 0) {\n      audioRef.current.play();\n      sendNotification();\n      switchMode();\n    }\n  }, [sendNotification, switchMode]);\n\n  function startTimer() {\n    setIsPaused(false);\n    isPausedRef.current = false;\n    startTimeRef.current = Date.now();\n    updateServiceWorker(remainingTimeRef.current, modeRef.current);\n  }\n\n  function pauseTimer() {\n    setIsPaused(true);\n    isPausedRef.current = true;\n    if (startTimeRef.current !== null) {\n      const elapsedTime = Math.floor((Date.now() - startTimeRef.current) / 1000);\n      remainingTimeRef.current = Math.max(remainingTimeRef.current - elapsedTime, 0);\n      startTimeRef.current = null;\n    }\n    if (navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage({ type: 'CANCEL_TIMER' });\n    }\n  }\n\n  useEffect(() => {\n    if (isPausedRef.current) {\n      initTimer();\n    }\n  }, [workMinutes, breakMinutes, initTimer]);\n\n  useEffect(() => {\n    modeRef.current = mode;\n  }, [mode]);\n\n  useEffect(() => {\n    initTimer();\n\n    const interval = setInterval(() => {\n      tick();\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [initTimer, tick]);\n\n  useEffect(() => {\n    savePomodoroSessions();\n  }, [pomodoroSessions, savePomodoroSessions]);\n\n  useEffect(() => {\n    const checkDate = () => {\n      const now = new Date();\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\n        setPomodoroSessions([]);\n        savePomodoroSessions();\n      }\n    };\n\n    const interval = setInterval(checkDate, 60000); \n\n    return () => clearInterval(interval);\n  }, [savePomodoroSessions]);\n\n  const totalSeconds = modeRef.current === \"work\" ? workMinutes * 60 : breakMinutes * 60;\n  const percentage = Math.round((secondsLeft / totalSeconds) * 100);\n\n  const minutes = Math.floor(secondsLeft / 60);\n  let seconds = secondsLeft % 60;\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds;\n\n  return (\n    <div className={style.timer_container}>\n      <CircularProgressbar\n        value={percentage}\n        text={`${minutes}:${secondsFormatted}`}\n        styles={buildStyles({\n          textColor: \"#fff\",\n          pathColor: modeRef.current === \"work\" ? \"#ed4141\" : \"#40c463\",\n          trailColor: \"rgba(255,255,255,.2)\",\n        })}\n      />\n      <div className={style.button_container}>\n        {isPaused ? (\n          <PlayButton onClick={startTimer} />\n        ) : (\n          <PauseButton onClick={pauseTimer} />\n        )}\n      </div>\n      <Progress sessions={pomodoroSessions} />\n      <div className={style.settings_button_container}>\n        <SettingsButton onClick={() => setShowSettings(true)} />\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;","import style from \"./back-button.module.css\";\nimport React, { ButtonHTMLAttributes } from \"react\";\n\ntype TBackButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst BackButton: React.FC<TBackButtonProps> = (props) => {\n  return (\n    <button className={style.back_button} {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        className={style.icon}\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.793 2.232a.75.75 0 0 1-.025 1.06L3.622 7.25h10.003a5.375 5.375 0 0 1 0 10.75H10.75a.75.75 0 0 1 0-1.5h2.875a3.875 3.875 0 0 0 0-7.75H3.622l4.146 3.957a.75.75 0 0 1-1.036 1.085l-5.5-5.25a.75.75 0 0 1 0-1.085l5.5-5.25a.75.75 0 0 1 1.06.025Z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n      <p className={style.text}>back</p>\n    </button>\n  );\n};\n\nexport default BackButton;\n","import React, { useEffect, useState } from 'react'\nimport styles from './RequestNotificationButton.module.css'\n\ntype TNotificationStatus = 'default' | 'granted' | 'denied';\n\nconst RequestNotificationButton: React.FC = () => {\n    const [notificationStatus, setNotificationStatus] = useState<TNotificationStatus>('default');\n\n    useEffect(() => {\n        if('Notification' in window) {\n            setNotificationStatus(Notification.permission as TNotificationStatus);\n        }\n    }, [])\n\n    const requestPermission = async () => {\n      if (\"Notification\" in window) {\n        const permission = await Notification.requestPermission();\n        setNotificationStatus(permission as TNotificationStatus);\n      }\n    };\n\n    const getButtonText = () => {\n        switch(notificationStatus) {\n            case 'granted':\n                return 'Notification Enabled';\n            case 'denied':\n                return 'Notification blocked';\n            default: \n                return 'Enable Notification';\n        }\n    };\n\n    const getButtonClass = () => {\n        switch (notificationStatus) {\n            case 'granted':\n                return styles.button_enabled;\n            case 'denied':\n                return styles.button_denied;\n            default:\n                return styles.button_default;\n        }\n    }\n  \n    return <button \n        onClick={requestPermission}\n        className={`${styles.button} ${getButtonClass()}`}\n        disabled={notificationStatus === 'denied'}\n        >\n            {getButtonText()}\n        </button>;\n  }\n\n  export default RequestNotificationButton;","import React, { useContext } from \"react\";\nimport style from \"./settings.module.css\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport BackButton from \"../back-button/BackButton\";\nimport RequestNotificationButton from \"../request-notofication-button/RequestNotificationButton\";\n\nconst Settings = () => {\n  const {\n    workMinutes,\n    breakMinutes,\n    setWorkMinutes,\n    setBreakMinutes,\n    showSettings,\n    setShowSettings,\n  } = useContext(SettingsContext);\n\n  if (!showSettings) {\n    return null;\n  }\n  return (\n    <div className={style.settings_container}>\n      <label className={style.label_text}>work: {workMinutes} min</label>\n      <ReactSlider\n        className={style.slider}\n        value={workMinutes}\n        thumbClassName={style.thumb}\n        trackClassName={style.track}\n        min={1}\n        max={60}\n        onChange={(newValue) => setWorkMinutes(newValue)}\n      />\n      <label className={style.label_text}>break: {breakMinutes} min</label>\n      <ReactSlider\n        className={style.slider_green}\n        value={breakMinutes}\n        thumbClassName={`${style.thumb} ${style.thumb_green}`}\n        trackClassName={style.track}\n        onChange={(newValue) => setBreakMinutes(newValue)}\n        min={1}\n        max={30}\n      />\n      <div className={style.back_button_container}>\n        <RequestNotificationButton />\n        <BackButton onClick={() => setShowSettings(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport style from \"./app.module.css\";\nimport Timer from \"../timer/timer\";\nimport Settings from \"../settings/settings\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\n\nconst App = () => {\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n  const [workMinutes, setWorkMinutes] = useState<number>(20);\n  const [breakMinutes, setBreakMinutes] = useState<number>(5);\n\n  return (\n    <main className={style.main}>\n      <SettingsContext.Provider\n        value={{\n          workMinutes,\n          breakMinutes,\n          setWorkMinutes,\n          setBreakMinutes,\n          showSettings,\n          setShowSettings,\n        }}\n      >\n        {showSettings ? <Settings /> : <Timer />}\n      </SettingsContext.Provider>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then(registration => {\n        console.log('Service Worker registered successfully:', registration.scope);\n      })\n      .catch(error => {\n        console.log('Service Worker registration failed:', error);\n      });\n  });\n}\n\nreportWebVitals();\n"],"sourceRoot":""}