{"version":3,"sources":["components/settings/settings.module.css","components/timer/timer.module.css","components/settings-button/settings-button.module.css","components/back-button/back-button.module.css","components/progress/style.module.css","components/app/app.module.css","components/play-button/play-button.module.css","components/pause-button/pause-button.module.css","components/play-button/play-button.tsx","components/pause-button/pause-button.tsx","components/settings-button/settings-button.tsx","components/settings-context/SettingsContext.tsx","components/progress/progress.tsx","components/timer/timer.tsx","components/back-button/BackButton.tsx","components/settings/settings.tsx","components/app/App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","settings_container","slider","slider_green","thumb","thumb_green","label_text","back_button_container","timer_container","button_container","settings_button_container","settings_button","icon","text","back_button","cells","cell","main","play_button","pulse","pause_button","PlayButton","_ref","onClick","className","React","createElement","concat","style","xmlns","fill","viewBox","stroke-width","stroke","stroke-linecap","stroke-linejoin","d","PauseButton","SettingsButton","props","Object","assign","SettingsContext","createContext","workMinutes","breakMinutes","setWorkMinutes","setBreakMinutes","showSettings","setShowSettings","Progress","memo","sessions","getColor","index","length","Array","from","_","i","key","backgroundColor","Timer","useContext","isPaused","setIsPaused","useState","secondsLeft","setSecondsLeft","mode","setMode","pomodoroSessions","setPomodoroSessions","startTimeRef","useRef","endTimeRef","rafIdRef","audioRef","Audio","process","secondsLeftRef","isPausedRef","modeRef","tick","current","now","Date","newSecondsLeft","Math","max","round","requestAnimationFrame","play","nextMode","nextSeconds","handlePomodoroComplete","switchMode","type","prev","useEffect","initialSeconds","initTimer","cancelAnimationFrame","window","Notification","requestPermission","permission","body","totalSeconds","percantage","minutes","floor","seconds","secondsFormatted","CircularProgressbar","value","styles","buildStyles","textColor","pathColor","trailColor","timeLeft","BackButton","fillRule","clipRule","Settings","ReactSlider","thumbClassName","trackClassName","track","min","onChange","newValue","App","Provider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","navigator","addEventListener","serviceWorker","register","registration","console","log","scope","catch","error"],"mappings":"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","file":"static/js/main.c65484e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"settings_settings_container__Qe-Sa\",\"slider\":\"settings_slider__1alb2\",\"slider_green\":\"settings_slider_green__1TvLw\",\"thumb\":\"settings_thumb__2rH5f\",\"thumb_green\":\"settings_thumb_green__1u70X\",\"label_text\":\"settings_label_text__mKARp\",\"back_button_container\":\"settings_back_button_container__5vI7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer_container\":\"timer_timer_container__V9v2g\",\"button_container\":\"timer_button_container__Wb7RO\",\"settings_button_container\":\"timer_settings_button_container__1BFA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_button\":\"settings-button_settings_button__3y5a5\",\"icon\":\"settings-button_icon__FC8AJ\",\"text\":\"settings-button_text__3yd2D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back_button\":\"back-button_back_button__2BDj6\",\"icon\":\"back-button_icon__3SKiG\",\"text\":\"back-button_text__v8uv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cells\":\"style_cells__2e3lp\",\"cell\":\"style_cell__29Ipw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__3yfFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play_button\":\"play-button_play_button__2lL0Q\",\"pulse\":\"play-button_pulse__qAuxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pause_button\":\"pause-button_pause_button__1m1Cl\",\"pulse\":\"pause-button_pulse__1mZHC\"};","import React from \"react\";\nimport style from \"./play-button.module.css\";\n\ninterface IPlayButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst PlayButton: React.FC<IPlayButtonProps> = ({ onClick, className }) => {\n  return (\n    <button className={`${style.play_button} ${className}`} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React from \"react\";\nimport style from \"./pause-button.module.css\";\n\ninterface IPauseButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst PauseButton: React.FC<IPauseButtonProps> = ({ onClick, className }) => {\n  return (\n    <button className={`${style.pause_button} ${className}`} onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className=\"w-6 h-6\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M15.75 5.25v13.5m-7.5-13.5v13.5\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default PauseButton;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport style from \"./settings-button.module.css\";\n\ntype TSettingsButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst SettingsButton: React.FC<TSettingsButtonProps> = (props) => {\n  return (\n    <button className={style.settings_button} {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        className={style.icon}\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M4.5 12a7.5 7.5 0 0 0 15 0m-15 0a7.5 7.5 0 1 1 15 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077 1.41-.513m14.095-5.13 1.41-.513M5.106 17.785l1.15-.964m11.49-9.642 1.149-.964M7.501 19.795l.75-1.3m7.5-12.99.75-1.3m-6.063 16.658.26-1.477m2.605-14.772.26-1.477m0 17.726-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205 12 12m6.894 5.785-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495\"\n        />\n      </svg>\n      <p className={style.text}>Settings</p>\n    </button>\n  );\n};\nexport default SettingsButton;\n","import React from \"react\";\n\ninterface ISettingsContext {\n  workMinutes: number;\n  breakMinutes: number;\n  setWorkMinutes: (minutes: number) => void;\n  setBreakMinutes: (minutes: number) => void;\n  showSettings: boolean;\n  setShowSettings: (show: boolean) => void;\n}\n\nconst SettingsContext = React.createContext<ISettingsContext>({\n  workMinutes: 45,\n  breakMinutes: 5,\n  setWorkMinutes: () => {},\n  setBreakMinutes: () => {},\n  showSettings: false,\n  setShowSettings: () => {},\n});\n\nexport default SettingsContext;\n","import { useState } from \"react\";\nimport style from \"./style.module.css\";\nimport React from \"react\";\n// #ed4141 red\n// #40c463 green\ninterface IProgress {\n  sessions: Array<\"work\" | \"break\">;\n}\n\nconst Progress: React.FC<IProgress> = React.memo(({ sessions }) => {\n  const totalCells = 36;\n  const getColor = (index: number) => {\n    if (index < sessions.length) {\n      return sessions[index] === \"work\" ? \"#ed4141\" : \"#40c463\";\n    }\n    return \"rgba(255,255,255,.2)\";\n  };\n\n  const cells = Array.from({ length: totalCells }, (_, i) => (\n    <div\n      className={style.cell}\n      key={i}\n      style={{ backgroundColor: getColor(i) }}\n    />\n  ));\n  return <div className={style.cells}>{cells}</div>;\n});\n\nexport default Progress;\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport PlayButton from \"../play-button/play-button\";\nimport style from \"./timer.module.css\";\nimport PauseButton from \"../pause-button/pause-button\";\nimport SettingsButton from \"../settings-button/settings-button\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport Progress from \"../progress/progress\";\n\nfunction Timer() {\n  const { showSettings, setShowSettings, workMinutes, breakMinutes } =\n    useContext(SettingsContext);\n  const [isPaused, setIsPaused] = useState<boolean>(true);\n  const [secondsLeft, setSecondsLeft] = useState<number>(0);\n  const [mode, setMode] = useState<\"work\" | \"break\" | \"pause\">(\"work\");\n  const [pomodoroSessions, setPomodoroSessions] = useState<\n    (\"work\" | \"break\")[]\n  >([]);\n\n  const startTimeRef = useRef<number | null>(null);\n  const endTimeRef = useRef<number | null>(null);\n  const rafIdRef = useRef<number | null>(null);\n\n  const audioRef = useRef(new Audio(process.env.PUBLIC_URL + \"/alarm.mp3\"));\n\n  const secondsLeftRef = useRef(secondsLeft);\n  const isPausedRef = useRef(isPaused);\n  const modeRef = useRef(mode);\n\n  function tick() {\n    if (startTimeRef.current === null || endTimeRef.current === null) return;\n  \n    const now = Date.now();\n    const newSecondsLeft = Math.max(0, Math.round((endTimeRef.current - now) / 1000));\n  \n    if (newSecondsLeft !== secondsLeftRef.current) {\n      setSecondsLeft(newSecondsLeft);\n      secondsLeftRef.current = newSecondsLeft;\n    }\n  \n    if (newSecondsLeft > 0 && !isPausedRef.current) {\n      rafIdRef.current = requestAnimationFrame(tick);\n    } else if (newSecondsLeft === 0) {\n      audioRef.current.play();\n      switchMode();\n    }\n  }\n  \nfunction startTimer() {\n  const now = Date.now();\n  startTimeRef.current = now;\n  endTimeRef.current = now + secondsLeftRef.current * 1000;\n\n  setIsPaused(false);\n  isPausedRef.current = false;\n  rafIdRef.current = requestAnimationFrame(tick);\n}\n\n  function pauseTimer() {\n    if (rafIdRef.current !== null) {\n      cancelAnimationFrame(rafIdRef.current);\n    }\n    setIsPaused(true);\n    isPausedRef.current = true;\n    if (startTimeRef.current !== null && endTimeRef.current !== null) {\n      const timeLeft = endTimeRef.current - Date.now();\n      endTimeRef.current = Date.now() + timeLeft\n    }\n  }\n\n\n  const handlePomodoroComplete = (type: 'work' | 'break') => {\n    setPomodoroSessions((prev: any) => [...prev, type]);\n  };\n\n  function switchMode() {\n    const nextMode = modeRef.current === 'work' ? 'break' : 'work';\n    const nextSeconds = (nextMode === 'work' ? workMinutes : breakMinutes) * 60;\n\n    setMode(nextMode);\n    modeRef.current = nextMode;\n    setSecondsLeft(nextSeconds);\n    secondsLeftRef.current = nextSeconds;\n\n    const now = Date.now();\n    startTimeRef.current = now;\n    endTimeRef.current = now + nextSeconds * 1000;\n\n    if (nextMode === 'break') {\n      handlePomodoroComplete('work');\n    } else {\n      handlePomodoroComplete('break');\n    }\n\n    if (!isPausedRef.current) {\n      rafIdRef.current = requestAnimationFrame(tick);\n    }\n  }\n\n  function initTimer() {\n    const initialSeconds = (mode === 'work' ? workMinutes : breakMinutes) * 60;\n    setSecondsLeft(initialSeconds);\n    secondsLeftRef.current = initialSeconds;\n\n    const now = Date.now();\n    startTimeRef.current = now;\n    endTimeRef.current = now + initialSeconds * 1000;\n  }\n\n  function sendNotification() {\n    if (\"Notification\" in window && Notification.permission === 'granted') {\n      new Notification('Pomodoro Timer', {\n        body: 'Time is up! Take a break.',\n        icon: '%PUBLIC_URL%/tomato.png'\n      });\n    }\n  }\n\n  useEffect(() => {\n    initTimer();\n  }, [showSettings, workMinutes, breakMinutes, mode]);\n\n  useEffect(() => {\n    return () => {\n      if (rafIdRef.current !== null) {\n        cancelAnimationFrame(rafIdRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if ('Notification' in window) {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (secondsLeft === 0 && !isPaused) {\n      sendNotification();\n    }\n  }, [secondsLeft, isPaused]);\n\n  const totalSeconds = (modeRef.current === \"work\" ? workMinutes : breakMinutes) * 60;\n  const percantage = Math.round((secondsLeft / totalSeconds) * 100);\n  const minutes = Math.floor(secondsLeft / 60);\n  let seconds = secondsLeft % 60;\n  let secondsFormatted = seconds < 10 ? `0${seconds}` : seconds;\n\n  return (\n    <div className={style.timer_container}>\n      <CircularProgressbar\n        value={percantage}\n        text={`${minutes}:${secondsFormatted}`}\n        styles={buildStyles({\n          textColor: \"#fff\",\n          pathColor: mode === \"work\" ? \"#ed4141\" : \"#40c463\",\n          trailColor: \"rgba(255,255,255,.2)\",\n          backgroundColor: \"#40c463\",\n        })}\n      />\n      <div className={style.button_container}>\n        {isPaused ? (\n          <PlayButton onClick={startTimer} />\n        ) : (\n          <PauseButton onClick={pauseTimer} />\n        )}\n      </div>\n      <Progress sessions={pomodoroSessions} />\n      <div className={style.settings_button_container}>\n        <SettingsButton onClick={() => setShowSettings(true)} />\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","import style from \"./back-button.module.css\";\nimport React, { ButtonHTMLAttributes } from \"react\";\n\ntype TBackButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst BackButton: React.FC<TBackButtonProps> = (props) => {\n  return (\n    <button className={style.back_button} {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        className={style.icon}\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.793 2.232a.75.75 0 0 1-.025 1.06L3.622 7.25h10.003a5.375 5.375 0 0 1 0 10.75H10.75a.75.75 0 0 1 0-1.5h2.875a3.875 3.875 0 0 0 0-7.75H3.622l4.146 3.957a.75.75 0 0 1-1.036 1.085l-5.5-5.25a.75.75 0 0 1 0-1.085l5.5-5.25a.75.75 0 0 1 1.06.025Z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n      <p className={style.text}>back</p>\n    </button>\n  );\n};\n\nexport default BackButton;\n","import React, { useContext } from \"react\";\nimport style from \"./settings.module.css\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\nimport BackButton from \"../back-button/BackButton\";\n\nconst Settings = () => {\n  const {\n    workMinutes,\n    breakMinutes,\n    setWorkMinutes,\n    setBreakMinutes,\n    showSettings,\n    setShowSettings,\n  } = useContext(SettingsContext);\n  if (!showSettings) {\n    return null;\n  }\n  return (\n    <div className={style.settings_container}>\n      <label className={style.label_text}>work: {workMinutes} min</label>\n      <ReactSlider\n        className={style.slider}\n        value={workMinutes}\n        thumbClassName={style.thumb}\n        trackClassName={style.track}\n        min={1}\n        max={60}\n        onChange={(newValue) => setWorkMinutes(newValue)}\n      />\n      <label className={style.label_text}>break: {breakMinutes} min</label>\n      <ReactSlider\n        className={style.slider_green}\n        value={breakMinutes}\n        thumbClassName={`${style.thumb} ${style.thumb_green}`}\n        trackClassName={style.track}\n        onChange={(newValue) => setBreakMinutes(newValue)}\n        min={1}\n        max={30}\n      />\n      <div className={style.back_button_container}>\n        <BackButton onClick={() => setShowSettings(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport style from \"./app.module.css\";\nimport Timer from \"../timer/timer\";\nimport Settings from \"../settings/settings\";\nimport SettingsContext from \"../settings-context/SettingsContext\";\n\nconst App = () => {\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n  const [workMinutes, setWorkMinutes] = useState<number>(20);\n  const [breakMinutes, setBreakMinutes] = useState<number>(5);\n\n  return (\n    <main className={style.main}>\n      <SettingsContext.Provider\n        value={{\n          workMinutes,\n          breakMinutes,\n          setWorkMinutes,\n          setBreakMinutes,\n          showSettings,\n          setShowSettings,\n        }}\n      >\n        {showSettings ? <Settings /> : <Timer />}\n      </SettingsContext.Provider>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then(registration => {\n        console.log('Service Worker registered successfully:', registration.scope);\n      })\n      .catch(error => {\n        console.log('Service Worker registration failed:', error);\n      });\n  });\n}\n\nreportWebVitals();\n"],"sourceRoot":""}